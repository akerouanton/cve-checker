package pkgmgr

import (
    "errors"
    "github.com/NiR-/cve-checker/distribution"
    "github.com/NiR-/cve-checker/cve"
)

var (
    drivers               = make(map[string]Driver)
    ErrDistroNotSupported = errors.New("distro not supported")
)

type Driver interface {
    InstalledPackages(distro distribution.Distribution) ([]cve.Package, error)
}

func Register(name string, driver Driver) {
    drivers[name] = driver
}

func LocalPackages(distro distribution.Distribution) (localPkgs []cve.Package, err error) {
    for _, driver := range drivers {
        pkgs, err := driver.InstalledPackages(distro)

        if err != nil && err != ErrDistroNotSupported {
            return nil, err
        }

        if pkgs != nil {
            return pkgs, nil
        }
    }

    return nil, ErrDistroNotSupported
}
