package datastore

import (
    "errors"
    "fmt"

    "github.com/NiR-/cve-checker/cve"
    "github.com/NiR-/cve-checker/pkg"
)

var (
    factories = make(map[string]Factory)

    ErrStoreNotExists = errors.New("selected data store does not exist")
)

type Store interface {
    StoreVulns(vulns ...cve.CVE) error
    CountVulns() int
    ListVulnsForPackage(pkg.Package) []cve.CVE
}

type Factory func() Store

func Register(name string, factory Factory) (err error) {
    if _, exists := factories[name]; exists {
        return errors.New(fmt.Sprintf("factory \"%s\" already exists", err))
    }

    factories[name] = factory
    return nil
}

func Use(name string) (store Store, err error) {
    factory, exists := factories[name]
    if !exists {
        return nil, ErrStoreNotExists
    }

    return factory(), nil
}
